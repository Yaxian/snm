name: canary-windows
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - main 
jobs:
  build-windows:
    runs-on: windows-2019
    env:
      TARGET: x86_64-pc-windows-msvc
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ env.TARGET }}
      - name: Build binary
        run: |
          sudo apt-get install musl-tools
          cargo build --verbose --release --target ${{ env.TARGET }}
        env:
          RUST_BACKTRACE: full
      - name: Strip binary (linux and macos)
        run:  |
          for file in snm snx node npm pnpm yarn; do
            strip "target/${{ env.TARGET }}/release/$file"
          done
      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ env.TARGET }}/release/{node.exe,npm.exe,pnpm.exe,yarn.exe,snm.exe,snx.exe} archive/
          7z a ${{ env.TARGET }}.7z LICENSE README.md node.exe npm.exe pnpm.exe yarn.exe snm.exe
          ls -l
      - name: Upload archive
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TARGET }}.tar.gz
          path: ${{ env.TARGET }}.tar.gz

   
  